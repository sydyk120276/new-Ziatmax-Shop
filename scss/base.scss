a {
  text-decoration: none;
  color: #fff;
}
ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
body {
  margin: 0;
}

button {
  cursor: pointer;
  font-family: inherit;
  border: none;
  background-color: #fff;
}
button::-moz-focus-inner{
  padding: 0;
  border: 0;
}
h2 {
  margin: 0;
}
h1 {
  margin: 0;
}

[class*="-ibg"] {
  position: relative;
  img {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    object-fit: cover;
  }
}
[class*="-ibg_contain"] {
  img {
    object-fit: contain;
  }
}

@mixin adaptiveValue($property, $startSize, $minSize, $maxWidth, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
      // Только если меньше контейнера
  #{$property}: $startSize + px;
    @media (max-width: #{$maxWidth + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
    }
  } @else if $type==2 {
    // Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidth + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
    }
  } @else if $type==0 {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
  }
}

@mixin adaptive-value($property, $startSize, $minSize) {
  $addSize: $startSize - $minSize;
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
  }

@function percent($pxOne, $pxTwo) {
  $result: math.div($pxOne, $pxTwo) * 100%;
  @return $result;
}

@function rem($px) {
  $result: math.div($px, 16) + rem;
  @return $result;
}

@function em($px) {
  $result: math.div($px, 16) + em;
  @return $result;
}

.active {
  display: flex;
  flex-direction: column;
  transition: all 0.3s ease 0s;
}
// .active-popup {
//   display: flex;
//   align-items: center;
//   justify-content: center;
// }
body.lock {
  overflow: hidden;
}